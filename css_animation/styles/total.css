/* transition + transform */
/* transition : 기존 속성에 이벤트에 의해 변화가 있을 때 애니메이션 적용 */
/* transform : 2d, 3d 회전, 이동, 크기, 기울기 적용 속성(중심축 변경 가능) */
#btn {
    border: 2px solid #000; padding: 20px 100px;
    transform: skewX(5deg);
    transition: transform 0.3s;
}
#btn:hover {transform: skewX(0);}
.link {
    display: block; width: 150px; height: 150px;
    background: radial-gradient(circle, #fff, #ddd);
    border-radius: 50%;
    background-size: 250%; background-position: center;
    text-align: center; line-height: 150px;
    transition: background-size 1s;
    
}
.link:hover {
    animation: scale 0.5s ease alternate;
    background-size: 100%;
}
@keyframes scale {
    0% {transform: scale(1)}
    30% {transform: scale(0.9)}
    70% {transform: scale(1)}
    100% {transform: scale(1.1)}
}
/* 시간차 애니메이션 */
.city {
    width: 1000px; margin: 0 auto; padding: 10px;
    background-color: #2b2b2b;
}
.city .car {width: 100px; position: relative; left: 0;}
.city .car img {width: 100%;}
.city .car1 {animation: carMove 1s both;}
.city .car2 {animation: carMove 1.5s 0.3s both; filter: hue-rotate(120deg);}
.city .car3 {
    animation: carMove 0.8s 1s alternate-reverse both; filter: hue-rotate(-120deg);
    transform: scaleX(-1);
}
@keyframes carMove {
    from {left: 0;}
    to {left: 870px;}
}